{"version":3,"sources":["logo.svg","components/Assets/welcome_image.jpg","components/MainComponent.js","components/WelcomeNavComponent.js","components/WelcomeBodyComponent.js","components/WelcomeComponent.js","components/LoginComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","props","toggle","setState","isNavOpen","state","bind","className","Navbar","light","expand","to","NavbarBrand","NavbarToggler","onClick","this","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Component","WelcomeNav","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","tabIndex","aria-disabled","WelcomeBody","username","email","password","confirmPassword","message","disableBtn","handleChange","handleSubmit","evt","target","name","value","preventDefault","axios","post","then","res","alert","data","console","log","catch","err","Card","CardHeader","CardBody","Form","onSubmit","FormGroup","Label","placeholder","onChange","disabled","Welcome","Login","porps","handleLogin","e","App","localStorage","getItem","path","exact","component","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.dc63f633.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/welcome_image.e57071b5.jpg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, NavbarBrand, Collapse, NavItem, NavbarToggler, Nav, NavLink, toggle } from 'reactstrap';\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      isNavOpen : true\r\n    }\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle = () => this.setState({isNavOpen: !this.state.isNavOpen});\r\n  \r\n  render(){\r\n      return (\r\n        <div className=\"container\">\r\n          <Navbar light expand=\"md\">\r\n            <Link to='/home'>\r\n            <NavbarBrand className=\"nav-brand\">ToDo App</NavbarBrand>\r\n            </Link>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav className=\"nav\">\r\n                <NavItem>\r\n                  <NavLink>\r\n                    Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink>\r\n                    About\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Navbar>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass WelcomeNav extends Component {\r\n  render(){\r\n      return (\r\n      <div className=\"container\">\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-transparent\">\r\n      <a className=\"navbar-brand\" href=\"#\">ToDoApp</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link to='/login'>\r\n            <a className=\"nav-link\" href=\"#\">Login</a>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">About</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link disabled\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Comming soon</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WelcomeNav;","import React, { Component } from 'react';\r\nimport { WelcomeImage } from './Assets/welcome_image.jpg';\r\nimport './css/welcomebody.css';\r\nimport { Card, CardHeader,CardBody, Form, FormGroup, Label } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass WelcomeBody extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      username:'',\r\n      email:'',\r\n      password:'',\r\n      confirmPassword:'',\r\n      message: null,\r\n      disableBtn: false\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(evt){\r\n    //console.log(evt.target.name);\r\n    this.setState({\r\n      [evt.target.name] : evt.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt){\r\n    evt.preventDefault();\r\n    this.setState({disableBtn: !this.state.disableBtn});\r\n    const url = 'https://todolist-arjun.herokuapp.com/register'\r\n    const data = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type':'application/json'\r\n      },\r\n      body: {\r\n        email: this.state.email,\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      }\r\n    }\r\n    axios.post(url,{\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      username: this.state.username\r\n    })\r\n    .then((res)=>{\r\n      alert(res.data.message);\r\n      console.log(' res : ',res.data.message);\r\n      this.setState({message: res.data.message});\r\n      this.setState({disableBtn: !this.state.disableBtn});\r\n    }).catch((err)=>{\r\n      alert('Error Occured Refresh your Browser');\r\n    })\r\n  }\r\n\r\n  render(){\r\n      return (\r\n        <div className=\"container d-flex flex-column welcome-div\">\r\n            <div className=\"container welcome-div-left m-20\">\r\n                <h2 className=\"h2\">Todo List</h2>\r\n                <p>Find your way of arranging tasks and schedules. Track all your time and productivity rate</p>\r\n                <button className=\"btn wel-get-btn mt-5 ml-20\">\r\n                  <a className=\"text-light welcome-btn\" href='#getstarted'>Get Started</a>\r\n                </button>\r\n            </div>\r\n            <div className=\"container welcome-space-out d-flex\">\r\n              \r\n            </div>\r\n            <div className=\"container welcome-div-right d-flex justify-content-center row\">\r\n              <Card className=\"card m-2 bg-transparent border-success col-8 offset-4\" id=\"getstarted\">\r\n                <CardHeader className=\"card-header\">Register Here! Today</CardHeader>\r\n                <CardBody>\r\n                  <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup className=\"row form-group\">\r\n                      <Label className=\"form-group-label col-12 col-md-3\">Username</Label>\r\n                      <input className=\"form-control border-success input col-12 col-md-9 bg-transparent\"\r\n                      placeholder=\"Username\"\r\n                      type=\"text\"\r\n                      value={this.state.username} \r\n                      name=\"username\"\r\n                      onChange={this.handleChange}/>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row form-group\">\r\n                      <Label className=\"form-group-label col-12 col-md-3\">Email</Label>\r\n                      <input className=\"form-control border-success input col-12 col-md-9 bg-transparent\"\r\n                      placeholder=\"mail@example.com\"\r\n                      type=\"email\"\r\n                      value={this.state.email} \r\n                      name=\"email\"\r\n                      onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row form-group\">\r\n                      <Label className=\"form-group-label col-12 col-md-3\">Password</Label>\r\n                      <input className=\"form-control border-success input col-12 col-md-9 bg-transparent\"\r\n                      placeholder=\"Password\"\r\n                      type=\"password\"\r\n                      value={this.state.password} \r\n                      name=\"password\"\r\n                      onChange={this.handleChange}/>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row form-group\">\r\n                      <Label className=\"form-group-label col-12 col-md-3\">Confirm Password</Label>\r\n                      <input className=\"form-control border-success input col-12 col-md-9 bg-transparent\"\r\n                      placeholder=\"Confirm Password\"\r\n                      type=\"password\"\r\n                      value={this.state.confirmPassword} \r\n                      name=\"confirmPassword\"\r\n                      onChange={this.handleChange}/>\r\n                    </FormGroup>\r\n                    <button className=\"btn btn-success\" disabled={this.state.disableBtn} type=\"submit\">Submit</button>\r\n                  </Form>\r\n                </CardBody>\r\n                <text>{this.state.message}</text>\r\n              </Card>\r\n            </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default WelcomeBody;","import React, { Component } from 'react';\r\nimport WelcomeNav from './WelcomeNavComponent';\r\nimport WelcomeBody from './WelcomeBodyComponent';\r\nimport './css/welcomebody.css';\r\n\r\nclass Welcome extends Component {\r\n  render(){\r\n      return (\r\n          <div className=\"container-fluid welcome-main-div\">\r\n              <WelcomeNav/>\r\n              <WelcomeBody/>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Welcome;","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, Form, FormGroup, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(porps){\r\n        super(porps);\r\n\r\n        this.state = {\r\n            email:'',\r\n            password:'',\r\n            disableBtn : false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        //this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    handleChange(evt){\r\n        //console.log(evt.target.name);\r\n        this.setState({\r\n          [evt.target.name] : evt.target.value\r\n        });\r\n      }\r\n\r\n      handleLogin(e)\r\n      {\r\n          const url = 'https://todolist-arjun.herokuapp.com/login/'\r\n          const local = 'https://localhost:1234/login';\r\n          //console.log(this.state);\r\n          e.preventDefault();\r\n          this.setState({disableBtn: !this.state.disableBtn});\r\n          axios.post(local,{\r\n              email: this.state.email,\r\n              password: this.state.password\r\n          })\r\n          .then((res)=>{\r\n              //console.log(res);\r\n              if(res.data.message==='logined Succesfully')\r\n              {\r\n\r\n              }\r\n              this.setState({disableBtn: !this.state.disableBtn});\r\n          })\r\n        }\r\n  render(){\r\n      return (\r\n        <div className=\"container d-flex justify-content-center\">\r\n            <Card className=\"col-6 mt-10\">\r\n                <CardHeader className=\"card-header\">\r\n                    <h3>\r\n                    Todo Login\r\n                    </h3>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Form className=\"form\" onSubmit={this.handleLogin}>\r\n                        <FormGroup className=\"form-group row\">\r\n                            <Label className=\"form-group-label col-md-3 col-12\">Email</Label>\r\n                            <input className=\"form-control col-12 col-md-9\"\r\n                            placeholder=\"mail@example.com\"\r\n                            type=\"email\"\r\n                            value={this.state.email} \r\n                            name=\"email\"\r\n                            onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup className=\"form-group row\">\r\n                            <Label className=\"form-group-label col-md-3 col-12\">Password</Label>\r\n                            <input className=\"form-control col-12 col-md-9\"\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            value={this.state.password} \r\n                            name=\"password\"\r\n                            onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                        <button type=\"submit\" disabled={this.state.disableBtn} className=\"btn btn-success\">Login</button>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { withRouter } from 'react-router-dom'\nimport Main from './components/MainComponent';\nimport Welcome from './components/WelcomeComponent';\nimport Login from './components/LoginComponent';;\n\n\n\nclass App extends React.Component {\n\n  componentDidMount()\n  {\n    if(localStorage.getItem('token'))\n    {\n          \n    }\n  }\n  render()\n  {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/' exact component={Welcome} />\n          <Route path='/login' exact component={Login}/>\n          <Route path='/home' exact component={Main}/>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}